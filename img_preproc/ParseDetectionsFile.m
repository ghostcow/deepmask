function [detections] = ParseDetectionsFile(filePath)
% parsing detections file, generated by AlignDataset.m
% file format - [image_path],[aligned_image_path],[detection 4D vector]

detections = containers.Map; 
fid = fopen(filePath);
C = textscan(fid, '%s %s %s', 'Delimiter', ',');
imagePaths = C{1};
alignedImagePaths = C{2};
detectionsVecs = C{3};
nImages = length(imagePaths);

for iDetection = 1:nImages
    % cut aligned image path and save only [figure_name]/[image_name]
    alignedImagePath = alignedImagePaths{iDetection};
    [temp, alignedImageName, ext1] = fileparts(alignedImagePath);
    [~, figureName, ext2] = fileparts(temp);
    % NOTE : if the figure name has dots than it's considered as ext
    key = fullfile([figureName ext2], [alignedImageName ext1]);
    % convert ' ' to '_'
    key = strrep(key, ' ', '_');
    
    % parse detections string
    detectionVec = sscanf(detectionsVecs{iDetection}, '%f %f %f %f');
    
    if isKey(detections, key)
        fprintf('warninf - duplicate key = %s\n', key);
    end
    detections(key) = struct('path', strrep(imagePaths{iDetection}, ' ', '_'), ...
        'detection', detectionVec);
end

fclose(fid);

end
